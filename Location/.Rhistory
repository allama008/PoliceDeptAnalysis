shiny::runApp('Engagement1')
runApp('Engagement1')
runApp('Engagement2')
#write.csv(df,'C:/Users/DELL/Desktop/csvs/week_engagement.csv',row.names=FALSE)
dbDisconnect(mydb)
runApp('Engagement3')
runApp('Engagement3')
runApp('Engagement4')
runApp('Engagement4')
getConcernSentiment <- function(startdate, enddate)
{
if(as.Date(startdate)>Sys.Date() | as.Date(enddate)>Sys.Date())
{
print("Enter a valid date")
return("NA")
}
else
{
mydb = dbConnect(MySQL(), user='root', password='', dbname='ktp', host='127.0.0.1')
query<- "select * from page_owner_post"
posts<-dbGetQuery(mydb,query)
dates <- posts$created_time
dates <- as.Date(dates)
posts$date_created <- dates
required_posts <- subset(posts, posts$date_created >= as.Date(startdate) &
posts$date_created <= as.Date(enddate))
concerns_df <- required_posts[, c(1, 2, 5, 6)]
sentiment_df <- required_posts[, c(1, 2, 3)]
return(list(df_concerns = concerns_df, df_sentiment = sentiment_df))
}
runApp('Engagement4')
runApp('Engagement4')
.rs.restartR()
getConcernSentiment <- function(startdate, enddate)
{
if(as.Date(startdate)>Sys.Date() | as.Date(enddate)>Sys.Date())
{
print("Enter a valid date")
return("NA")
}
else
{
mydb = dbConnect(MySQL(), user='root', password='', dbname='ktp', host='127.0.0.1')
query<- "select * from page_owner_post"
posts<-dbGetQuery(mydb,query)
dates <- posts$created_time
dates <- as.Date(dates)
posts$date_created <- dates
required_posts <- subset(posts, posts$date_created >= as.Date(startdate) &
posts$date_created <= as.Date(enddate))
concerns_df <- required_posts[, c(1, 2, 5, 6)]
sentiment_df <- required_posts[, c(1, 2, 3)]
return(list(df_concerns = concerns_df, df_sentiment = sentiment_df))
}
}
getConcernSentiment("2017-02-08", "2017-10-24")
library(RMySQL)
getConcernSentiment("2017-02-08", "2017-10-24")
df <- getConcernSentiment("2017-02-08", "2017-10-24")
View(df$df_sentiment)
View(df$df_concerns)
getConcernSentiment <- function(startdate, enddate)
{
if(as.Date(startdate)>Sys.Date() | as.Date(enddate)>Sys.Date())
{
print("Enter a valid date")
return("NA")
}
else
{
mydb = dbConnect(MySQL(), user='root', password='', dbname='ktp', host='127.0.0.1')
query<- "select * from review_analysis"
posts<-dbGetQuery(mydb,query)
dates <- posts$created_time
dates <- as.Date(dates)
posts$date_created <- dates
required_posts <- subset(posts, posts$date_created >= as.Date(startdate) &
posts$date_created <= as.Date(enddate))
concerns_df <- required_posts[, c(1, 2, 5, 6)]
sentiment_df <- required_posts[, c(1, 2, 3)]
return(list(df_concerns = concerns_df, df_sentiment = sentiment_df))
}
}
df <- getConcernSentiment("2017-02-08", "2017-10-24")
View(df$df_sentiment)
View(df$df_concerns)
getConcernSentiment <- function(startdate, enddate)
{
if(as.Date(startdate)>Sys.Date() | as.Date(enddate)>Sys.Date())
{
print("Enter a valid date")
return("NA")
}
else
{
mydb = dbConnect(MySQL(), user='root', password='', dbname='ktp', host='127.0.0.1')
query<- "select * from review_analysis"
posts<-dbGetQuery(mydb,query)
dates <- posts$created_time
dates <- as.Date(dates)
posts$date_created <- dates
required_posts <- subset(posts, posts$date_created >= as.Date(startdate) &
posts$date_created <= as.Date(enddate))
concerns_df <- required_posts[, c(1, 2, 5, 6)]
sentiment_df <- required_posts[, c(1, 2, 4)]
return(list(df_concerns = concerns_df, df_sentiment = sentiment_df))
}
}
df <- getConcernSentiment("2017-02-08", "2017-10-24")
View(df$df_sentiment)
View(df$df_concerns)
shiny::runApp('Reviews')
runApp('Reviews')
runApp('Reviews')
runApp('Reviews')
runApp('Reviews')
runApp('VPSentiment')
runApp('VPSentiment')
runApp('VPSentiment')
runApp('VPSentiment')
runApp('Reviews')
dbDisconnect(mydb)
runApp('Reviews')
dbDisconnect()
.rs.restartR()
runApp('Reviews')
dbDisconnectAll <- function(){
ile <- length(dbListConnections(MySQL())  )
lapply( dbListConnections(MySQL()), function(x) dbDisconnect(x) )
cat(sprintf("%s connection(s) closed.\n", ile))
}
runApp('interaction')
shiny::runApp('Location')
